{"version":3,"sources":["../../src/components/Histoslider.js"],"names":["histosliderStyle","position","backgroundColor","border","Histoslider","state","dragging","setState","props","onChange","extent","data","startMinimum","scale","start","Math","max","end","selectedScale","base","domain","range","clamp","selection","selectionSorted","Object","assign","paddingTop","padding","showOnDrag","reset","bind","height","dragChange","propTypes","arrayOf","number","isRequired","func","selectionColor","string","bucketSize","histogramHeight","histogramPadding","bool","style","object","barBorderRadius","selectionFormat","sliderPrefix","defaultProps"],"mappings":"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","file":"Histoslider.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { extent as e } from 'd3-array'\nimport { scaleLog, scaleLinear } from 'd3-scale'\n\nimport Histogram from './Histogram'\nimport Slider from './Slider'\n\nconst histosliderStyle = {\n  position: 'relative',\n  backgroundColor: '#fafafa',\n  border: '1px solid #eaeaea'\n}\n\nexport default class Histoslider extends Component {\n\n  constructor () {\n    super()\n    this.state = {\n      dragging: false\n    }\n  }\n\n  dragChange (dragging) {\n    this.setState({ dragging })\n  }\n\n  reset () {\n    this.props.onChange(null)\n  }\n\n  render () {\n    const extent = e(this.props.data)\n\n    const startMinimum = this.props.scale == 'linear' ? 0 : 1;\n    const start = Math.max(startMinimum, this.props.start || extent[0])\n    const end = this.props.end || extent[1]\n\n    const selectedScale = {\n      'linear': scaleLinear(),\n      'log': scaleLog().base(1.7),\n    }[this.props.scale];\n    const scale = selectedScale\n      .domain([start, end])\n      .range([0, 100])\n      .clamp(true)\n    let selection = this.props.selection ? this.props.selection : [start, end]\n    const selectionSorted = e(selection)\n\n    // TODO: selection layer\n    return (\n      <div style={Object.assign(histosliderStyle, { paddingTop: this.props.padding })} className='Histoslider Histoslider-wrapper'>\n\n        {\n          !this.props.showOnDrag || this.state.dragging\n          ? <Histogram\n            {...Object.assign(\n            {},\n            this.props,\n              {\n                start,\n                end,\n                reset: this.reset.bind(this),\n                extent,\n                selection: selectionSorted,\n                scale,\n                height: this.props.height - 40\n              }\n          )\n          } />\n          : null\n        }\n\n        <Slider {...Object.assign({}, this.props, { start, end, dragChange: this.dragChange.bind(this), reset: this.reset.bind(this), extent, selection, selectionSorted, scale, height: 50 })} />\n      </div>\n    )\n  }\n}\n\nHistoslider.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.number).isRequired,\n  onChange: PropTypes.func.isRequired,\n  start: PropTypes.number,\n  end: PropTypes.number,\n  selectionColor: PropTypes.string,\n  bucketSize: PropTypes.number,\n  padding: PropTypes.number,\n  selection: PropTypes.arrayOf(PropTypes.number),\n  histogramHeight: PropTypes.number,\n  histogramPadding: PropTypes.number,\n  height: PropTypes.number,\n  showOnDrag: PropTypes.bool,\n  style: PropTypes.object,\n  barBorderRadius: PropTypes.number,\n  selectionFormat: PropTypes.string,\n  scale: PropTypes.string,\n  sliderPrefix: PropTypes.string,\n}\n\nHistoslider.defaultProps = {\n  bucketSize: 1,\n  selectionColor: '#2ecc71',\n  showOnDrag: false,\n  histogramPadding: 4,\n  padding: 20,\n  height: 200,\n  barBorderRadius: 0,\n  style: {\n    border: '1px solid red'\n  },\n  selectionFormat: ',d',\n  scale: 'linear',\n  sliderPrefix: '',\n}\n"]}