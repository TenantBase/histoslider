{"version":3,"sources":["../../src/components/Slider.js"],"names":["sliderStyle","display","paddingBottom","zIndex","handleStyle","cursor","Slider","window","addEventListener","mouseMove","bind","dragEnd","removeEventListener","state","dragging","index","e","stopPropagation","setState","dragIndex","props","dragChange","x","nativeEvent","layerX","touches","pageX","selection","selected","scale","invert","Math","abs","onChange","selectionWidth","f","selectionFormat","height","width","dragFromSVG","reset","padding","innerWidth","selectionColor","selectionSorted","map","m","i","dragStart","sliderPrefix","propTypes","data","arrayOf","number","isRequired","start","end","bucketSize","string","histogramPadding","func"],"mappings":"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","file":"Slider.js","sourcesContent":["  import React, { Component, PropTypes } from 'react'\n  import { format } from 'd3-format'\n\nconst sliderStyle = {\n  display: 'block',\n  paddingBottom: '8px',\n  zIndex: '2'\n}\n\nconst handleStyle = {\n  cursor: 'move'\n}\n\nexport default class Slider extends Component {\n\n  componentDidMount () {\n    window.addEventListener('mousemove', this.mouseMove.bind(this), false)\n    window.addEventListener('mouseup', this.dragEnd.bind(this), false)\n    window.addEventListener('touchmove', this.mouseMove.bind(this), false)\n    window.addEventListener('touchend', this.dragEnd.bind(this), false)\n  }\n\n  componentWilUnmount () {\n    window.removeEventListener('mousemove', this.mouseMove.bind(this), false)\n    window.removeEventListener('mouseup', this.dragEnd.bind(this), false)\n    window.removeEventListener('touchmove', this.mouseMove.bind(this), false)\n    window.removeEventListener('touchend', this.dragEnd.bind(this), false)\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      dragging: false\n    }\n  }\n\n  dragStart (index, e) {\n    e.stopPropagation()\n    if (!this.state.dragging) {\n      this.setState({\n        dragging: true,\n        dragIndex: index\n      }, () => {\n        this.props.dragChange(true)\n      })\n    }\n  }\n\n  dragEnd (e) {\n    e.stopPropagation()\n    this.setState({\n      dragging: false\n    }, () => {\n      this.props.dragChange(false)\n    })\n  }\n\n  dragFromSVG (e) {\n    if (!this.state.dragging) {\n      const x = e.nativeEvent.layerX || e.nativeEvent.touches[0].pageX;\n      let selection = [...this.props.selection]\n      let selected = this.props.scale.invert(x)\n      let dragIndex\n\n      if (Math.abs(selected - selection[0]) > Math.abs(selected - selection[1])) {\n        selection[1] = selected\n        dragIndex = 0\n      } else {\n        selection[0] = selected\n        dragIndex = 1\n      }\n\n      this.props.onChange(selection)\n      this.setState({\n        dragging: true,\n        dragIndex\n      }, () => {\n        this.props.dragChange(true)\n      })\n    }\n  }\n\n  mouseMove (e) {\n    if (this.state.dragging) {\n      let selection = [...this.props.selection]\n      selection[this.state.dragIndex] = this.props.scale.invert(e.layerX || e.touches[0].pageX)\n      this.props.onChange(selection)\n    }\n  }\n\n  render () {\n    const selection = this.props.selection\n    const selectionWidth = Math.abs(this.props.scale(selection[1]) - this.props.scale(selection[0]))\n    const f = format(this.props.selectionFormat);\n\n    return (\n      <svg\n        style={sliderStyle}\n        height={this.props.height - 10}\n        width={this.props.width}\n        onMouseDown={this.dragFromSVG.bind(this)}\n        onTouchStart={this.dragFromSVG.bind(this)}\n        onDoubleClick={this.props.reset}\n      >\n        <rect\n          height={4}\n          fill={'#f1f1f1'}\n          x={this.props.padding}\n          y={10}\n          width={this.props.innerWidth}\n        />\n        <rect\n          height={4}\n          fill={this.props.selectionColor}\n          x={this.props.scale(this.props.selectionSorted[0])}\n          y={10}\n          width={selectionWidth}\n        />\n        {\n          this.props.selection.map((m, i) => {\n            return (\n              <g transform={'translate(' + this.props.scale(m) + ', 0)'} key={i}>\n                <circle\n                  style={handleStyle}\n                  r={10}\n                  cx={0}\n                  cy={12.5}\n                  fill='#ddd'\n                  strokeWidth='1'\n                />\n                <circle\n                  style={handleStyle}\n                  onMouseDown={this.dragStart.bind(this, i)}\n                  onTouchStart={this.dragStart.bind(this, i)}\n                  r={9}\n                  cx={0}\n                  cy={12}\n                  fill='white'\n                  stroke='#ccc'\n                  strokeWidth='1'\n                />\n                <text\n                  textAnchor='middle'\n                  x={0}\n                  y={36}\n                  fill='#666'\n                  fontSize={12}\n                >\n                  {this.props.sliderPrefix + f(m)}\n                </text>\n              </g>\n            )\n          })\n        }\n      </svg>\n    )\n  }\n}\n\nSlider.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.number).isRequired,\n  selection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  selectionSorted: PropTypes.arrayOf(PropTypes.number).isRequired,\n  start: PropTypes.number,\n  end: PropTypes.number,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  innerWidth: PropTypes.number,\n  padding: PropTypes.number,\n  bucketSize: PropTypes.number,\n  selectionColor: PropTypes.string,\n  histogramPadding: PropTypes.number,\n  scale: PropTypes.func,\n  reset: PropTypes.func,\n  dragChange: PropTypes.func,\n  onChange: PropTypes.func,\n  selectionFormat: PropTypes.string,\n  sliderPrefix: PropTypes.string,\n}\n"]}