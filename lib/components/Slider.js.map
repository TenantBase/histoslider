{"version":3,"sources":["../../src/components/Slider.js"],"names":["sliderStyle","display","paddingBottom","zIndex","handleStyle","cursor","Slider","window","addEventListener","mouseMove","bind","dragEnd","removeEventListener","state","dragging","index","e","stopPropagation","setState","dragIndex","props","dragChange","selection","selected","scale","invert","nativeEvent","layerX","Math","abs","onChange","selectionWidth","f","selectionFormat","height","width","dragFromSVG","reset","padding","innerWidth","selectionColor","selectionSorted","map","m","i","dragStart","propTypes","data","arrayOf","number","isRequired","start","end","bucketSize","string","histogramPadding","func"],"mappings":"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","file":"Slider.js","sourcesContent":["  import React, { Component, PropTypes } from 'react'\n  import { format } from 'd3-format'\n\nconst sliderStyle = {\n  display: 'block',\n  paddingBottom: '8px',\n  zIndex: '2'\n}\n\nconst handleStyle = {\n  cursor: 'move'\n}\n\nexport default class Slider extends Component {\n\n  componentDidMount () {\n    window.addEventListener('mousemove', this.mouseMove.bind(this), false)\n    window.addEventListener('mouseup', this.dragEnd.bind(this), false)\n  }\n\n  componentWilUnmount () {\n    window.removeEventListener('mousemove', this.mouseMove.bind(this), false)\n    window.removeEventListener('mouseup', this.dragEnd.bind(this), false)\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      dragging: false\n    }\n  }\n\n  dragStart (index, e) {\n    e.stopPropagation()\n    if (!this.state.dragging) {\n      this.setState({\n        dragging: true,\n        dragIndex: index\n      }, () => {\n        this.props.dragChange(true)\n      })\n    }\n  }\n\n  dragEnd (e) {\n    e.stopPropagation()\n    this.setState({\n      dragging: false\n    }, () => {\n      this.props.dragChange(false)\n    })\n  }\n\n  dragFromSVG (e) {\n    if (!this.state.dragging) {\n      let selection = [...this.props.selection]\n      let selected = this.props.scale.invert(e.nativeEvent.layerX)\n      let dragIndex\n\n      if (Math.abs(selected - selection[0]) > Math.abs(selected - selection[1])) {\n        selection[1] = selected\n        dragIndex = 0\n      } else {\n        selection[0] = selected\n        dragIndex = 1\n      }\n\n      this.props.onChange(selection)\n      this.setState({\n        dragging: true,\n        dragIndex\n      }, () => {\n        this.props.dragChange(true)\n      })\n    }\n  }\n\n  mouseMove (e) {\n    if (this.state.dragging) {\n      let selection = [...this.props.selection]\n      selection[this.state.dragIndex] = this.props.scale.invert(e.layerX)\n      this.props.onChange(selection)\n    }\n  }\n\n  render () {\n    const selection = this.props.selection\n    const selectionWidth = Math.abs(this.props.scale(selection[1]) - this.props.scale(selection[0]))\n    const f = format(this.props.selectionFormat);\n\n    return (\n      <svg\n        style={sliderStyle}\n        height={this.props.height - 10}\n        width={this.props.width}\n        onMouseDown={this.dragFromSVG.bind(this)}\n        onDoubleClick={this.props.reset}\n      >\n        <rect\n          height={4}\n          fill={'#f1f1f1'}\n          x={this.props.padding}\n          y={10}\n          width={this.props.innerWidth}\n        />\n        <rect\n          height={4}\n          fill={this.props.selectionColor}\n          x={this.props.scale(this.props.selectionSorted[0])}\n          y={10}\n          width={selectionWidth}\n        />\n        {\n          this.props.selection.map((m, i) => {\n            return (\n              <g transform={'translate(' + this.props.scale(m) + ', 0)'} key={i}>\n                <circle\n                  style={handleStyle}\n                  r={10}\n                  cx={0}\n                  cy={12.5}\n                  fill='#ddd'\n                  strokeWidth='1'\n                />\n                <circle\n                  style={handleStyle}\n                  onMouseDown={this.dragStart.bind(this, i)}\n                  r={9}\n                  cx={0}\n                  cy={12}\n                  fill='white'\n                  stroke='#ccc'\n                  strokeWidth='1'\n                />\n                <text\n                  textAnchor='middle'\n                  x={0}\n                  y={36}\n                  fill='#666'\n                  fontSize={12}\n                >\n                  {\"$\" + f(m)}\n                </text>\n              </g>\n            )\n          })\n        }\n      </svg>\n    )\n  }\n}\n\nSlider.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.number).isRequired,\n  selection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  selectionSorted: PropTypes.arrayOf(PropTypes.number).isRequired,\n  start: PropTypes.number,\n  end: PropTypes.number,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  innerWidth: PropTypes.number,\n  padding: PropTypes.number,\n  bucketSize: PropTypes.number,\n  selectionColor: PropTypes.string,\n  histogramPadding: PropTypes.number,\n  scale: PropTypes.func,\n  reset: PropTypes.func,\n  dragChange: PropTypes.func,\n  onChange: PropTypes.func,\n  selectionFormat: PropTypes.string,\n}\n"]}